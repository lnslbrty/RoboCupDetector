<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="namespacerc">
<title>rc</title>
        <simplesect>
            <title> Classes </title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="classrc_1_1Camera">rc::Camera</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="structrc_1_1cbElement">rc::cbElement</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="classrc_1_1CircularBuffer">rc::CircularBuffer</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="classrc_1_1Daemon">rc::Daemon</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="classrc_1_1Detector">rc::Detector</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="classrc_1_1DetectorFactory">rc::DetectorFactory</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="structrc_1_1processed__image">rc::processed_image</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="structrc_1_1threadData">rc::threadData</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="classrc_1_1Threads">rc::Threads</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="structrc_1_1time__consumption">rc::time_consumption</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="classrc_1_1WebServer">rc::WebServer</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="classrc_1_1Window">rc::Window</link></para>
                    </listitem>
                </itemizedlist>
            </para>
        </simplesect>
        <simplesect>
            <title>Prüfung ob Dienst bereits terminiert wird/wurde</title>
      <description>
<para>
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Return values                        </title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <tbody>
                            <row>
                                <entry>true, wenn</entry>
                                <entry>
<para>Dienst bereits terminiert, sonst false </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                </para>
</description>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool <link linkend="namespacerc_1a793e3f430d5b5c99fe110a6a14ffcc6b">isDaemonTerminate</link> (
void )</para>
                    </listitem>
                </itemizedlist>
            </para>
        </simplesect>
        <simplesect>
            <title>Anwendungsstart abschließen</title>
      <description>
<para>Diese Routine sollte nach der Initialisierung aufgerufen werden. </para>
</description>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="namespacerc_1ad7301d689ad53a4f46b1f4c14c72e97e">startUpDone</link> (
void )</para>
                    </listitem>
                </itemizedlist>
            </para>
        </simplesect>
        <simplesect>
            <title>Reaktion auf Systemspez. Signale festlegen</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="namespacerc_1a394315bf537365634692ccb2bc32b287">setSignals</link> (
void )</para>
                    </listitem>
                </itemizedlist>
            </para>
        </simplesect>
        <simplesect>
            <title>Enumerations</title>
            <para>
                <itemizedlist>
                    <listitem>
                            <para><literallayout>enum <link linkend="namespacerc_1a79a656935f516f1a4339ad99f367934b">roboColor</link> {
<link linkend="namespacerc_1a79a656935f516f1a4339ad99f367934bae053030761daf455278efb2517e3e1b9">RB_YELLOW</link>,
<link linkend="namespacerc_1a79a656935f516f1a4339ad99f367934bad3af77d645b72510dcacc6631440cbd2">RB_BLUE</link>
}</literallayout>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para><literallayout>enum <link linkend="namespacerc_1a8aaafe8249ecec6c2695280357ec141d">roboImage</link> {
<link linkend="namespacerc_1a8aaafe8249ecec6c2695280357ec141dab309c34b28f3b6f604e41561ea642f39">IMAGE_DRAWED</link>= 0,
<link linkend="namespacerc_1a8aaafe8249ecec6c2695280357ec141da9ce497918b999adc1fb20ce50e21d9da">IMAGE_FILTERED_YELLOW</link>,
<link linkend="namespacerc_1a8aaafe8249ecec6c2695280357ec141dac112f1489cd09835a8b4f9aabd204354">IMAGE_FILTERED_BLUE</link>,
<link linkend="namespacerc_1a8aaafe8249ecec6c2695280357ec141daba8e6d15d89eb812e6e3350c9dca2fd9">IMAGE_MAX</link>
}</literallayout>
</para>
                    </listitem>
                </itemizedlist>
            </para>
        </simplesect>
        <simplesect>
            <title>Typedefs</title>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>typedef std::function&lt; void(unsigned int threadNum)&gt;  <link linkend="namespacerc_1a19b4c77afaec14cdc46eca7f2d22b345">threadFunc_t</link></para>
                    </listitem>
                </itemizedlist>
            </para>
        </simplesect>
        <simplesect>
            <title>Functions</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="structrc_1_1time__consumption">time_consumption</link> &amp; <link linkend="namespacerc_1abd4e153b18d26e2e26abc9c07d44924d">getAvgTime</link> (
void )</para>
                    </listitem>
                </itemizedlist>
            </para>
        </simplesect>
</section>
