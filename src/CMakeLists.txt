#####################################
cmake_minimum_required (VERSION 2.8) 
project (bsz7_robocup)
set(CMAKE_VERBOSE_MAKEFILE ON)
set(CMAKE_RULE_MESSAGES OFF)

set(ENABLE_DEBUG false CACHE BOOL "enable debug code")
set(USE_XWINDOW false CACHE BOOL "use X11 for realtime analysis")
set(USE_XWINDOW_FLTRD false CACHE BOOL "enable filtered image output (needs ENABLE_VIDEO)")
set(ENABLE_VIDEO false CACHE BOOL "enable divx video output")
set(CMAKE_CXX_FLAGS "-Wall -O2 -std=c++11")
set(CMAKE_INSTALL_PREFIX "/usr")
set(raspicam_DIR /usr/lib/cmake)

find_package(raspicam REQUIRED)
find_package(OpenCV)

IF (ENABLE_DEBUG)
        add_definitions(-g -DDEBUG=1 -D_DEBUG=1)
ENDIF()
IF (USE_XWINDOW_FLTRD)
        add_definitions(-DUSE_XWINDOW_FLTRD=1)
	set(USE_XWINDOW true)
ENDIF()

IF (OpenCV_FOUND AND raspicam_CV_FOUND)
IF (USE_XWINDOW)
	add_definitions(-DUSE_XWINDOW=1)
	set(XWINDOW_SOURCES RC_Window.cpp)
ENDIF()
IF (ENABLE_VIDEO)
	add_definitions(-DENABLE_VIDEO=1)
ENDIF()

set(raspicam_CV_LIBS ${raspicam_CV_LIBS} raspicam)
add_executable (robocup RC_Main.cpp RC_Semaphore.cpp RC_CircularBuffer.cpp RC_Camera.cpp RC_BlobDetector.cpp RC_BlobDetectorFactory.cpp ${XWINDOW_SOURCES})
target_link_libraries (robocup ${raspicam_CV_LIBS} raspicam pthread)

MESSAGE(STATUS "ENABLE_DEBUG: ${ENABLE_DEBUG}")
MESSAGE(STATUS "USE_XWINDOW: ${USE_XWINDOW}")
MESSAGE(STATUS "ENABLE_VIDEO: ${ENABLE_VIDEO}")
MESSAGE(STATUS "USE_XWINDOW_FLTRD: ${USE_XWINDOW_FLTRD}")
MESSAGE(STATUS "OpenCV found")
MESSAGE(STATUS "raspicam_cv found")
ELSE()
MESSAGE(FATAL_ERROR "OpenCV or raspicam_cv NOT FOUND")
ENDIF()

MESSAGE(STATUS "CMAKE_VERBOSE_MAKEFILE: ${CMAKE_VERBOSE_MAKEFILE}")
MESSAGE(STATUS "CMAKE_RULE_MESSAGES: ${CMAKE_RULE_MESSAGES}")
MESSAGE(STATUS "RASPICAM_CV_LIBS: ${raspicam_CV_LIBS}")
MESSAGE(STATUS "CMAKE_CXX_FLAGS: ${CMAKE_CXX_FLAGS}")
MESSAGE(STATUS "CMAKE_INSTALL_PREFIX: ${CMAKE_INSTALL_PREFIX}")

INSTALL_PROGRAMS(/bin FILES robocup)
#####################################
